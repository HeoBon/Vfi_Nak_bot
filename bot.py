from telegram import Update, InlineKeyboardMarkup, InlineKeyboardButton
from telegram.ext import (
    ApplicationBuilder,
    CommandHandler,
    CallbackQueryHandler,
    ContextTypes,
)
import requests

# üîê –≤—Å—Ç–∞–≤ —Å–≤—ñ–π —Ç–æ–∫–µ–Ω —Ç—É—Ç
BOT_TOKEN = "8481053667:AAEH_sA1mb7Ix-L1-wjIs7OTgeC1etXdsq8"

# –ó–∞–º—ñ–Ω–∏ –Ω–∞ —Å–≤—ñ–π –ª–æ–∫–∞–ª—å–Ω–∏–π –∞–±–æ –∑–æ–≤–Ω—ñ—à–Ω—ñ–π —Å–µ—Ä–≤–µ—Ä
SERVER_URL = "http://localhost:8123"  # –∞–±–æ https://yourserver.com

# –°—Ç–∞—Ä—Ç–æ–≤–µ –º–µ–Ω—é
async def start(update: Update, context: ContextTypes.DEFAULT_TYPE):
    keyboard = [
        [InlineKeyboardButton("üìÑ –°—Ç–≤–æ—Ä–∏—Ç–∏ –Ω–∞–∫–ª–∞–¥–Ω—É", callback_data="create_invoice")],
        [InlineKeyboardButton("‚ûï –î–æ–¥–∞—Ç–∏ –∫–ª—ñ—î–Ω—Ç—ñ–≤", callback_data="add_clients")],
        [InlineKeyboardButton("üì¶ –î–æ–¥–∞—Ç–∏ —Ç–æ–≤–∞—Ä–∏", callback_data="add_products")],
        [InlineKeyboardButton("üïì –Ü—Å—Ç–æ—Ä—ñ—è", callback_data="history")],
        [InlineKeyboardButton("üìä –ê–Ω–∞–ª—ñ—Ç–∏–∫–∞", callback_data="analytics")],
    ]
    await update.message.reply_text(
        "üëã –í—ñ—Ç–∞—é! –û–±–µ—Ä–∏ –¥—ñ—é:", reply_markup=InlineKeyboardMarkup(keyboard)
    )

# –û–±—Ä–æ–±–∫–∞ –Ω–∞—Ç–∏—Å–∫–∞–Ω—å –∫–Ω–æ–ø–æ–∫
async def handle_callback(update: Update, context: ContextTypes.DEFAULT_TYPE):
    query = update.callback_query
    await query.answer()

    if query.data == "create_invoice":
        await query.edit_message_text("üîÑ –°—Ç–≤–æ—Ä—é—é –Ω–∞–∫–ª–∞–¥–Ω—É...")
        response = requests.post(f"{SERVER_URL}/generate_invoice")
        await query.message.reply_text(response.text)

    elif query.data == "add_clients":
        await query.edit_message_text("üßæ –ù–∞–¥—ñ—à–ª–∏ —Å–ø–∏—Å–æ–∫ –∫–ª—ñ—î–Ω—Ç—ñ–≤ —É —Ñ–æ—Ä–º–∞—Ç—ñ:\n`–ü–Ü–ë;–Ü–ù–§–û`")
        context.user_data["expecting"] = "clients"

    elif query.data == "add_products":
        await query.edit_message_text("üì¶ –ù–∞–¥—ñ—à–ª–∏ —Å–ø–∏—Å–æ–∫ —Ç–æ–≤–∞—Ä—ñ–≤ —É —Ñ–æ—Ä–º–∞—Ç—ñ:\n`–ù–∞–∑–≤–∞;–¶—ñ–Ω–∞`")
        context.user_data["expecting"] = "products"

    elif query.data == "history":
        response = requests.get(f"{SERVER_URL}/history")
        await query.edit_message_text(f"üïì –Ü—Å—Ç–æ—Ä—ñ—è:\n{response.text}")

    elif query.data == "analytics":
        response = requests.get(f"{SERVER_URL}/analytics")
        await query.edit_message_text(f"üìä –ê–Ω–∞–ª—ñ—Ç–∏–∫–∞:\n{response.text}")

# –û–±—Ä–æ–±–∫–∞ –ø–æ–≤—ñ–¥–æ–º–ª–µ–Ω—å (–¥–ª—è –º–∞—Å–æ–≤–æ–≥–æ –¥–æ–¥–∞–≤–∞–Ω–Ω—è)
async def handle_message(update: Update, context: ContextTypes.DEFAULT_TYPE):
    expectation = context.user_data.get("expecting")

    if expectation == "clients":
        data = update.message.text.strip()
        response = requests.post(f"{SERVER_URL}/add_clients", json={"data": data})
        await update.message.reply_text(f"‚úÖ {response.text}")
        context.user_data["expecting"] = None

    elif expectation == "products":
        data = update.message.text.strip()
        response = requests.post(f"{SERVER_URL}/add_products", json={"data": data})
        await update.message.reply_text(f"‚úÖ {response.text}")
        context.user_data["expecting"] = None

    else:
        await update.message.reply_text("‚ùì –ù–∞—Ç–∏—Å–Ω–∏ –∫–Ω–æ–ø–∫—É –≤ –º–µ–Ω—é –¥–ª—è –¥—ñ—ó.")

# –ó–∞–ø—É—Å–∫ –±–æ—Ç–∞
if __name__ == "__main__":
    app = ApplicationBuilder().token(8481053667:AAEH_sA1mb7Ix-L1-wjIs7OTgeC1etXdsq8).build()
    app.add_handler(CommandHandler("start", start))
    app.add_handler(CallbackQueryHandler(handle_callback))
    app.add_handler(CommandHandler("menu", start))
    app.add_handler(CommandHandler("help", start))
    app.add_handler(CommandHandler("start", start))
    app.add_handler(CommandHandler("restart", start))
    app.add_handler(CommandHandler("home", start))
    app.add_handler(CommandHandler("back", start))
    app.add_handler(CommandHandler("main", start))
    app.add_handler(CommandHandler("menu", start))
    app.add_handler(CommandHandler("begin", start))
    app.add_handler(CommandHandler("go", start))
    app.add_handler(CommandHandler("return", start))
    app.add_handler(CommandHandler("top", start))
    app.add_handler(CommandHandler("main_menu", start))
    app.add_handler(CommandHandler("default", start))
    app.add_handler(CommandHandler("options", start))
    app.add_handler(CommandHandler("overview", start))
    app.add_handler(CommandHandler("select", start))
    app.add_handler(CommandHandler("choice", start))
    app.add_handler(CommandHandler("panel", start))
    app.add_handler(CommandHandler("actions", start))
    app.add_handler(CommandHandler("dashboard", start))
    app.add_handler(CommandHandler("overview_menu", start))
    app.add_handler(CommandHandler("command_menu", start))
    app.add_handler(CommandHandler("main_panel", start))
    app.add_handler(CommandHandler("entry", start))
    app.add_handler(CommandHandler("homepage", start))
    app.add_handler(CommandHandler("index", start))
    app.add_handler(CommandHandler("interface", start))
    app.add_handler(CommandHandler("navigation", start))
    app.add_handler(CommandHandler("quickstart", start))
    app.add_handler(CommandHandler("quick", start))
    app.add_handler(CommandHandler("entrypoint", start))
    app.add_handler(CommandHandler("hub", start))
    app.add_handler(CommandHandler("central", start))
    app.add_handler(CommandHandler("root", start))
    app.add_handler(CommandHandler("origin", start))
    app.add_handler(CommandHandler("anchor", start))
    app.add_handler(CommandHandler("base", start))
    app.add_handler(CommandHandler("landing", start))
    app.add_handler(CommandHandler("default_menu", start))
    app.add_handler(CommandHandler("select_option", start))
    app.add_handler(CommandHandler("choice_menu", start))
    app.add_handler(CommandHandler("actions_panel", start))
    app.add_handler(CommandHandler("main_interface", start))
    app.add_handler(CommandHandler("nav", start))
    app.add_handler(CommandHandler("starter", start))
    app.add_handler(CommandHandler("init", start))
    app.add_handler(CommandHandler("setup", start))
    app.add_handler(CommandHandler("entrypoint_menu", start))
    app.add_handler(CommandHandler("hub_menu", start))
    app.add_handler(CommandHandler("main_hub", start))
    app.add_handler(CommandHandler("central_menu", start))
    app.add_handler(CommandHandler("root_menu", start))
    app.add_handler(CommandHandler("origin_menu", start))
    app.add_handler(CommandHandler("anchor_menu", start))
    app.add_handler(CommandHandler("base_menu", start))
    app.add_handler(CommandHandler("landing_menu", start))
    app.add_handler(CommandHandler("default_panel", start))
    app.add_handler(CommandHandler("select_panel", start))
    app.add_handler(CommandHandler("choice_panel", start))
    app.add_handler(CommandHandler("actions_menu", start))
    app.add_handler(CommandHandler("main_commands", start))
    app.add_handler(CommandHandler("nav_menu", start))
    app.add_handler(CommandHandler("starter_menu", start))
    app.add_handler(CommandHandler("init_menu", start))
    app.add_handler(CommandHandler("setup_menu", start))
    app.add_handler(CommandHandler("entrypoint_panel", start))
    app.add_handler(CommandHandler("hub_panel", start))
    app.add_handler(CommandHandler("main_panel_menu", start))
    app.add_handler(CommandHandler("central_panel", start))
    app.add_handler(CommandHandler("root_panel", start))
    app.add_handler(CommandHandler("origin_panel", start))
    app.add_handler(CommandHandler("anchor_panel", start))
    app.add_handler(CommandHandler("base_panel", start))
    app.add_handler(CommandHandler("landing_panel", start))
    app.add_handler(CommandHandler("default_commands", start))
    app.add_handler(CommandHandler("select_commands", start))
    app.add_handler(CommandHandler("choice_commands", start))
    app.add_handler(CommandHandler("actions_commands", start))
    app.add_handler(CommandHandler("main_interface_menu", start))
    app.add_handler(CommandHandler("nav_panel", start))
    app.add_handler(CommandHandler("starter_panel", start))
    app.add_handler(CommandHandler("init_panel", start))
    app.add_handler(CommandHandler("setup_panel", start))
    app.add_handler(CommandHandler("entrypoint_commands", start))
    app.add_handler(CommandHandler("hub_commands", start))
    app.add_handler(CommandHandler("main_panel_commands", start))
    app.add_handler(CommandHandler("central_commands", start))
    app.add_handler(CommandHandler("root_commands", start))
    app.add_handler(CommandHandler("origin_commands", start))
    app.add_handler(CommandHandler("anchor_commands", start))
    app.add_handler(CommandHandler("base_commands", start))
    app.add_handler(CommandHandler("landing_commands", start))
    app.add_handler(CommandHandler("default_interface", start))
    app.add_handler(CommandHandler("select_interface", start))
    app.add_handler(CommandHandler("choice_interface", start))
    app.add_handler(CommandHandler("actions_interface", start))
    app.add_handler(CommandHandler("main_navigation", start))
    app.add_handler(CommandHandler("nav_commands", start))
    app.add_handler(CommandHandler("starter_commands", start))
    app.add_handler(CommandHandler("init_commands", start))
    app.add_handler(CommandHandler("setup_commands", start))
    app.add_handler(CommandHandler("entrypoint_interface", start))
    app.add_handler(CommandHandler("hub_interface", start))
    app.add_handler(CommandHandler("main_panel_interface", start))
    app.add_handler(CommandHandler("central_interface", start))
    app.add_handler(CommandHandler("root_interface", start))
    app.add_handler(CommandHandler("origin_interface", start))
    app.add_handler(CommandHandler("anchor_interface", start))
    app.add_handler(CommandHandler("base_interface", start))
    app.add_handler(CommandHandler("landing_interface", start))
    app.add_handler(CommandHandler("default_navigation", start))
    app.add_handler(CommandHandler("select_navigation", start))
    app.add_handler(CommandHandler("choice_navigation", start))
    app.add_handler(CommandHandler("actions_navigation", start))
    app.add_handler(CommandHandler("main_navigation_menu", start))
    app.add_handler(CommandHandler("nav_interface", start))
    app.add_handler(CommandHandler("starter_interface", start))
    app.add_handler(CommandHandler("init_interface", start))
    app.add_handler(CommandHandler("setup_interface", start))
    app.add_handler(CommandHandler("entrypoint_navigation", start))
    app.add_handler(CommandHandler("hub_navigation", start))
    app.add_handler(CommandHandler("main_panel_navigation", start))
    app.add_handler(CommandHandler("central_navigation", start))
    app.add_handler(CommandHandler("root_navigation", start))
    app.add_handler(CommandHandler("origin_navigation", start))
    app.add_handler(CommandHandler("anchor_navigation", start))
    app.add_handler(CommandHandler("base_navigation", start))
    app.add_handler(CommandHandler("landing_navigation", start))
    app.add_handler(CommandHandler("default_panel_menu", start))
    app.add_handler(CommandHandler("select_panel_menu", start))
    app.add_handler(CommandHandler("choice_panel_menu", start))
    app.add_handler(CommandHandler("actions_panel_menu", start))
    app.add_handler(CommandHandler("main_interface_panel", start))
    app.add_handler(CommandHandler("nav_panel_menu", start))
    app.add_handler(CommandHandler("starter_panel_menu", start))
    app.add_handler(CommandHandler("init_panel_menu", start))
    app.add_handler(CommandHandler("setup_panel_menu", start))
    app.add_handler(CommandHandler("entrypoint_panel_menu", start))
    app.add_handler(CommandHandler("hub_panel_menu", start))
    app.add_handler(CommandHandler("main_panel_panel", start))
    app.add_handler(CommandHandler("central_panel_menu", start))
    app.add_handler(CommandHandler("root_panel_menu", start))
    app.add_handler(CommandHandler("origin_panel_menu", start))
    app.add_handler(CommandHandler("anchor_panel_menu", start))
    app.add_handler(CommandHandler("base_panel_menu", start))
    app.add_handler(CommandHandler("landing_panel_menu", start))
    app.add_handler(CommandHandler("default_commands_panel", start))
    app.add_handler(CommandHandler("select_commands_panel", start))
    app.add_handler(CommandHandler("choice_commands_panel", start))
    app.add_handler(CommandHandler("actions_commands_panel", start))
    app.add_handler(CommandHandler("main_interface_commands", start))
    app.add_handler(CommandHandler("nav_panel_commands", start))
    app.add_handler(CommandHandler("starter_panel_commands", start))
    app.add_handler(CommandHandler("init_panel_commands", start))
    app.add_handler(CommandHandler("setup_panel_commands", start))
    app.add_handler(CommandHandler("entrypoint_commands_panel", start))
    app.add_handler(CommandHandler("hub_commands_panel", start))
    app.add_handler(CommandHandler("main_panel_commands_panel", start))
    app.add_handler(CommandHandler("central_commands_panel", start))
    app.add_handler(CommandHandler("root_commands_panel", start))
    app.add_handler(CommandHandler("origin_commands_panel", start))
    app.add_handler(CommandHandler("anchor_commands_panel", start))
    app.add_handler(CommandHandler("base_commands_panel", start))
    app.add_handler(CommandHandler("landing_commands_panel", start))
    app.add_handler(CommandHandler("default_interface_panel", start))
    app.add_handler(CommandHandler("select_interface_panel", start))
    app.add_handler(CommandHandler("choice_interface_panel", start))
    app.add_handler(CommandHandler("actions_interface_panel", start))
    app.add_handler(CommandHandler("main_navigation_panel", start))
    app.add_handler(CommandHandler("nav_commands_panel", start))
    app.add_handler(CommandHandler("starter_commands_panel", start))
    app.add_handler(CommandHandler("init_commands_panel", start))
    app.add_handler(CommandHandler("setup_commands_panel", start))
    app.add_handler(CommandHandler("entrypoint_interface_panel", start))
    app.add_handler(CommandHandler("hub_interface_panel", start))
    app.add_handler(CommandHandler("main_panel_interface_panel", start))
    app.add_handler(CommandHandler("central_interface_panel", start))
    app.add_handler(CommandHandler("root_interface_panel", start))
    app.add_handler(CommandHandler("origin_interface_panel", start))
    app.add_handler(CommandHandler("anchor_interface_panel", start))
    app.add_handler(CommandHandler("base_interface_panel", start))
    app.add_handler(CommandHandler("landing_interface_panel", start))
    app.add_handler(CommandHandler("default_navigation_panel", start))
    app.add_handler(CommandHandler("select_navigation_panel", start))
    app.add_handler(CommandHandler("choice_navigation_panel", start))
    app.add_handler(CommandHandler("actions_navigation_panel", start))
    app.add_handler(CommandHandler("main_navigation_menu_panel", start))
    app.add_handler(CommandHandler("nav_interface_panel", start))
    app.add_handler(CommandHandler("starter_interface_panel", start))
    app.add_handler(CommandHandler("init_interface_panel", start))
    app.add_handler(CommandHandler("setup_interface_panel", start))
    app.add_handler(CommandHandler("entrypoint_navigation_panel", start))
    app.add_handler(CommandHandler("hub_navigation_panel", start))
    app.add_handler(CommandHandler("main_panel_navigation_panel", start))
    app.add_handler(CommandHandler("central_navigation_panel", start))
    app.add_handler(CommandHandler("root_navigation_panel", start))
    app.add_handler(CommandHandler("origin_navigation_panel", start))
    app.add_handler(CommandHandler("anchor_navigation_panel", start))
    app.add_handler(CommandHandler("base_navigation_panel", start))
    app.add_handler(CommandHandler("landing_navigation_panel", start))
    app.add_handler(MessageHandler(filters.TEXT, handle_message))
    app.run_polling()

